buildscript {
    repositories {
        gradlePluginPortal()
        jcenter()
    }
}

plugins {
    id "java"
    id "com.commercehub.gradle.plugin.avro-base" version "0.99.99"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "com.google.cloud.tools.jib" version "2.7.1"
    id "eclipse"
}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"
version = "0.0.1"

repositories {
    jcenter()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    implementation "org.apache.avro:avro:1.10.1"
    implementation "org.slf4j:slf4j-simple:1.7.30"
    implementation "org.apache.kafka:kafka-streams:2.7.0"
    implementation "io.confluent:kafka-streams-avro-serde:6.1.0"
    testImplementation "org.apache.kafka:kafka-streams-test-utils:2.7.0"
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

task run(type: JavaExec) {
  main = "com.productiveanalytics.kafkastreams.KStreamsToKTable"
  classpath = sourceSets.main.runtimeClasspath
  args = ['configuration/dev.properties']
}

test {
    testLogging {
        outputs.upToDateWhen { false }
        showStandardStreams = true
        exceptionFormat = "full"
    }
}

jar {
  manifest {
    attributes(
      "Class-Path": configurations.compileClasspath.collect { it.getName() }.join(" "),
      "Main-Class": "com.productiveanalytics.kafkastreams.KStreamsToKTable"
    )
  }
}

shadowJar {
    archiveBaseName = "kstreams-to-ktable-standalone"
    archiveClassifier = ''
}